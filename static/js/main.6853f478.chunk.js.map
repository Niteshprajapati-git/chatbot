{"version":3,"sources":["widgets/EnrollmentNo.jsx","widgets/SoftwareDevelopment.jsx","widgets/WebDevelopment.jsx","widgets/Tools.jsx","widgets/WeatherInfo.jsx","Config.jsx","MessageParser.jsx","ActionProvider.jsx","App.jsx","index.js"],"names":["EnrollmentNo","props","useState","name","year","collagecode","shift","branch","rollno","state","setstate","EnrollmentFormValidation","field","message","actionProvider","createChatBotMessage","withAvatar","addMessageToBotState","onchangeevent","event","console","log","target","value","prev","type","onChange","Button","variant","color","className","onClick","preventDefault","input","EnrollSubmit","data","SoftwareDevelopment","map","val","index","WebDevelopment","WebDevelopmentState","Tools","EnrollmentNumber","SoftwareHandler","WebHandler","WeatherInfoHandle","WeatherInfo","setData","city","setcity","useEffect","a","url","fetch","response","json","resJSON","fetchApi","TextField","id","label","error","Card","style","maxWidth","border","CardActionArea","CardContent","Typography","gutterBottom","component","fontWeight","location","country","region","current","temp_c","wind_kph","wind_dir","localtime","botName","config","customStyles","botMessageBox","backgroundColor","chatButton","initialMessages","ToolsState","widgets","widgetName","widgetFunc","mapStateToProps","MessageParser","parse","lowerCase","toLowerCase","includes","Greeting","handleDefault","this","ActionProvider","setStateFunc","createClientMessage","messages","Array","isArray","setState","widget","App","Config","messageParser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6853f478.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n//defination  of EnrollmentNo widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\nconst EnrollmentNo = (props) => {\n  const [state, setstate] = useState({\n    name: \"\",\n    year: \"\",\n    collagecode: \"\",\n    shift: \"\",\n    branch: \"\",\n    rollno: \"\",\n  });\n\n  const EnrollSubmit = (input) => {\n    const message = props.actionProvider.createChatBotMessage(\n      `enrollment no of ${input.name}: ${input.year % 100}${input.collagecode}${\n        input.shift\n      }${input.branch}${input.rollno}`,\n      {\n        withAvatar: true,\n      }\n    );\n    props.actionProvider.addMessageToBotState(message);\n  };\n\n  const EnrollmentFormValidation = (field) => {\n    const message = props.actionProvider.createChatBotMessage(\n      `enter ${field} for create enrollment number`,\n      {\n        withAvatar: true,\n      }\n    );\n    props.actionProvider.addMessageToBotState(message);\n  };\n\n  const onsubmit = (event) => {\n    event.preventDefault();\n    console.log(state.name);\n\n    if (state.name === \"\") {\n      EnrollmentFormValidation(\"name\");\n    } else {\n      if (state.year === \"\") {\n        EnrollmentFormValidation(\"year\");\n      } else {\n        if (state.collagecode === \"\") {\n          EnrollmentFormValidation(\"collage code\");\n        } else {\n          if (state.shift === \"\") {\n            state.shift = \"01\";\n          }\n          if (state.branch === \"\") {\n            EnrollmentFormValidation(\"branch\");\n          } else {\n            if (state.rollno === \"\") {\n              EnrollmentFormValidation(\"rollno\");\n            } else {\n              const info = state;\n              //calling mathod define in actionprovider\n              EnrollSubmit(info);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const onchangeevent = (event) => {\n    console.log(event.target.value);\n    setstate((prev) => {\n      return { ...prev, [event.target.name]: event.target.value };\n    });\n  };\n\n  return (\n    <>\n      <form>\n        <label>Student Name: </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          onChange={onchangeevent}\n        />\n        <br />\n        <label>Admission Year: </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"year\"\n          value={state.year}\n          onChange={onchangeevent}\n        />\n        <br />\n        <label>Collage Code: </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"collagecode\"\n          value={state.collagecode}\n          onChange={onchangeevent}\n        />\n        <br />\n        <label>Shift: </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"shift\"\n          value={state.shift}\n          onChange={onchangeevent}\n        />\n        <br />\n        <label>Branch Code: </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"branch\"\n          value={state.branch}\n          onChange={onchangeevent}\n        />\n        <br />\n        <label>Roll No: </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"rollno\"\n          value={state.rollno}\n          onChange={onchangeevent}\n        />\n        <br />\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className=\"btn btn-primary my-3\"\n          onClick={onsubmit}\n        >\n          submit\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default EnrollmentNo;\n","import React from \"react\";\n\nconst data = [\n  \"JAVA\",\n  \"PYTHON\",\n  \"DATA-STRUCTURE & ALGORITHAM\",\n  \"SECURITY\",\n  \"PENETRATION TESTING\",\n  \"ANDROID/IOS SDK\",\n  \"DATA ANALYSIS\",\n  \"API & JSON\",\n];\n\n//defination  of SoftwareDevelopment widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\nconst SoftwareDevelopment = (props) => {\n  return (\n    <>\n      <ol>\n        {data.map((val, index) => {\n          return <li>{val}</li>;\n        })}\n      </ol>\n    </>\n  );\n};\n\nexport default SoftwareDevelopment;\n","import React from \"react\";\n\n//defination  of WebDevelopment widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\nconst WebDevelopment = (props) => {\n  return (\n    <>\n      <ol>\n        {props.WebDevelopmentState.map((val, index) => {\n          return <li>{val}</li>;\n        })}\n      </ol>\n    </>\n  );\n};\nexport default WebDevelopment;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n//defination  of Tools widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\nconst Tools = (props) => {\n  return (\n    <>\n      <ul>\n        <li>\n          <Button\n            className=\"my-1\"\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={props.actionProvider.EnrollmentNumber}\n          >\n            Enrollment No\n          </Button>\n        </li>\n        <li>\n          <Button\n            className=\"my-1\"\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={props.actionProvider.SoftwareHandler}\n          >\n            Software Development\n          </Button>\n        </li>\n        <li>\n          <Button\n            className=\"my-1\"\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={props.actionProvider.WebHandler}\n          >\n            Web Development\n          </Button>\n        </li>\n        <li>\n          <Button\n            className=\"my-1\"\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={props.actionProvider.WeatherInfoHandle}\n          >\n            Weather Information\n          </Button>\n        </li>\n      </ul>\n    </>\n  );\n};\nexport default Tools;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//http://api.openweathermap.org/data/2.5/weather?q=${name}&appid=54dadd0dc2a3fe8d31eb9d376a84c24d\n//http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=54dadd0dc2a3fe8d31eb9d376a84c24d\n//defination  of WeatherInfo widget\n//all the mathod define in actionprovider and all states of widget are passed in props\n//you can use all fuunction and state with the help of props\nconst WeatherInfo = (props) => {\n  const [data, setData] = useState(null);\n  const [city, setcity] = useState();\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      console.log(city);\n      const url = `http://api.weatherapi.com/v1/current.json?key=6db8b9619d9d4bddb0e155940213004&q=${city}&aqi=yes`;\n      const response = await fetch(url);\n      const resJSON = await response.json();\n      setData(resJSON);\n      console.log(data);\n    };\n    fetchApi();\n  }, [city]);\n\n  return (\n    <>\n      <TextField\n        id=\"standard-basic\"\n        label=\"city name\"\n        type=\"text\"\n        name=\"cityname\"\n        className=\"text-center\"\n        value={city}\n        onChange={(event) => {\n          setcity(event.target.value);\n        }}\n      />\n\n      <div>\n        {data ? (\n          !data.error ? (\n            <Card className=\"my-3\" style={{ maxWidth: 345, border: \"block\" }}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    <h4>{city}</h4>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <h5>\n                      <span style={{ fontWeight: \"bold\" }}>Country:</span>\n                      {data.location.country}{\" \"}\n                      <span style={{ fontWeight: \"bold\" }}>Region:</span>\n                      {data.location.region}\n                    </h5>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <h6>\n                      <span style={{ fontWeight: \"bold\" }}>Temp:</span>\n                      {data.current.temp_c}°C\n                    </h6>\n                    <h6>\n                      <span style={{ fontWeight: \"bold\" }}>Wind:</span>\n                      {data.current.wind_kph} kph {data.current.wind_dir}\n                    </h6>\n                    <h6>\n                      <span style={{ fontWeight: \"bold\" }}>Local Time:</span>\n                      {data.location.localtime}\n                    </h6>\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ) : (\n            <h3>data not found</h3>\n          )\n        ) : (\n          <h3>data not found</h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default WeatherInfo;\n","import { createChatBotMessage } from \"react-chatbot-kit\";\nimport EnrollmentNo from \"./widgets/EnrollmentNo\";\nimport SoftwareDevelopment from \"./widgets/SoftwareDevelopment\";\nimport WebDevelopment from \"./widgets/WebDevelopment\";\nimport Tools from \"./widgets/Tools\";\nimport WeatherInfo from \"./widgets/WeatherInfo\";\n\nconst botName = \"Nitesh Prajapati\";\n//congig for chatbot\nconst config = {\n  botName: botName,\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#376B7E\",\n    },\n    chatButton: {\n      backgroundColor: \"#5ccc9d\",\n    },\n  },\n  initialMessages: [createChatBotMessage(`hii, i am ${botName}.`)],\n  state: {\n    WebDevelopmentState: [\n      \"HTML\",\n      \"CSS\",\n      \"JAVASCRIPT\",\n      \"BOOTSTRAP\",\n      \"JQUERY & AJAX\",\n      \"SASS\",\n      \"REACT\",\n      \"REDUX\",\n      \"NODEJS\",\n      \"EXPRESS\",\n      \"MONGODB & MONGOOSE\",\n    ],\n    ToolsState: [\n      \"enrollment number\",\n      \"web development\",\n      \"software development\",\n      \"whether info\",\n    ],\n  },\n  //widgets declaration section which we use in our bot for display information\n  widgets: [\n    {\n      widgetName: \"EnrollmentNo\",\n      widgetFunc: (props) => <EnrollmentNo {...props} />,\n      mapStateToProps: [\"Enrollment\"],\n    },\n    {\n      widgetName: \"WebDevelopment\",\n      widgetFunc: (props) => <WebDevelopment {...props} />,\n      mapStateToProps: [\"WebDevelopmentState\"],\n    },\n    {\n      widgetName: \"SoftwareDevelopment\",\n      widgetFunc: (props) => <SoftwareDevelopment {...props} />,\n    },\n    {\n      widgetName: \"Tools\",\n      widgetFunc: (props) => <Tools {...props} />,\n      mapStateToProps: [\"ToolsState\"],\n    },\n    {\n      widgetName: \"WeatherInfo\",\n      widgetFunc: (props) => <WeatherInfo {...props} />,\n      mapStateToProps: [\"WeatherInfo\"],\n    },\n  ],\n};\n\nexport default config;\n","class MessageParser {\n  constructor(actionProvider, state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n\n  parse = (message) => {\n    //convert message in lowercase wich passed by user\n    const lowerCase = message.toLowerCase();\n\n    //define your keyword in condition and return handler function whixh created in actionprovider\n\n    if (\n      lowerCase.includes(\"hi\") ||\n      lowerCase.includes(\"hii\") ||\n      lowerCase.includes(\"hiii\") ||\n      lowerCase.includes(\"hello\") ||\n      lowerCase.includes(\"hey\") ||\n      lowerCase.includes(\"hiiii\") ||\n      lowerCase.includes(\"..\") ||\n      lowerCase.includes(\"heyy\")\n    ) {\n      return this.actionProvider.Greeting();\n    }\n\n    if (\n      lowerCase.includes(\"feature\") ||\n      lowerCase.includes(\"what you provide\") ||\n      lowerCase.includes(\"provide\") ||\n      lowerCase.includes(\"services\") ||\n      lowerCase.includes(\"tools\") ||\n      lowerCase.includes(\"tool\") ||\n      lowerCase.includes(\"about\") ||\n      lowerCase.includes(\"help\") ||\n      lowerCase.includes(\"methods\")\n    ) {\n      return this.actionProvider.Tools();\n    }\n\n    if (\n      lowerCase.includes(\"weather\") ||\n      lowerCase.includes(\"weather info\") ||\n      lowerCase.includes(\"weather information\") ||\n      lowerCase.includes(\"info about weather\") ||\n      lowerCase.includes(\"about weather\") ||\n      lowerCase.includes(\"weather of city\") ||\n      lowerCase.includes(\"information of weather\") ||\n      lowerCase.includes(\"mosam\")\n    ) {\n      return this.actionProvider.WeatherInfoHandle();\n    }\n\n    if (\n      lowerCase.includes(\"enroll\") ||\n      lowerCase.includes(\"rollment\") ||\n      lowerCase.includes(\"enrollmentno\") ||\n      lowerCase.includes(\"roll no\") ||\n      lowerCase.includes(\"roll\") ||\n      lowerCase.includes(\"roll number\") ||\n      lowerCase.includes(\"enrollment no\") ||\n      lowerCase.includes(\"enrollment number\")\n    ) {\n      return this.actionProvider.EnrollmentNumber();\n    }\n\n    if (\n      lowerCase.includes(\"web\") ||\n      lowerCase.includes(\"webdevelop\") ||\n      lowerCase.includes(\"website\") ||\n      lowerCase.includes(\"website development\") ||\n      lowerCase.includes(\"web app\") ||\n      lowerCase.includes(\"web application\") ||\n      lowerCase.includes(\"webdevelopment\") ||\n      lowerCase.includes(\"web development\") ||\n      lowerCase.includes(\"websites\")\n    ) {\n      return this.actionProvider.WebHandler();\n    }\n\n    if (\n      lowerCase.includes(\"android\") ||\n      lowerCase.includes(\"ios\") ||\n      lowerCase.includes(\"flutter\") ||\n      lowerCase.includes(\"software\") ||\n      lowerCase.includes(\"softwaredevelop\") ||\n      lowerCase.includes(\"software develop\") ||\n      lowerCase.includes(\"softwaresite development\") ||\n      lowerCase.includes(\"software app\") ||\n      lowerCase.includes(\"software application\") ||\n      lowerCase.includes(\"softwaredevelopment\") ||\n      lowerCase.includes(\"software development\")\n    ) {\n      return this.actionProvider.SoftwareHandler();\n    }\n\n    return this.actionProvider.handleDefault();\n  };\n}\n\nexport default MessageParser;\n","class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n  //method for add message in our chatbot\n  addMessageToBotState = (messages) => {\n    if (Array.isArray(messages)) {\n      this.setState((state) => ({\n        ...state,\n        messages: [...state.messages, ...messages],\n      }));\n    } else {\n      this.setState((state) => ({\n        ...state,\n        messages: [...state.messages, messages],\n      }));\n    }\n  };\n\n  //simple greeting which return simple message\n  Greeting = () => {\n    const message = this.createChatBotMessage(`hii`, {\n      withAvatar: true,\n    });\n    this.addMessageToBotState(message);\n  };\n\n  //use tools widget, return button and action doing\n  Tools = () => {\n    const message = this.createChatBotMessage(\n      `we provides this much features`,\n      {\n        withAvatar: true,\n        widget: \"Tools\",\n      }\n    );\n    this.addMessageToBotState(message);\n  };\n\n  //for weather widget, API testing and fetch data return current weather info of city using API\n  WeatherInfoHandle = () => {\n    const message = this.createChatBotMessage(\n      `enter your city name to know weather if your city`,\n      {\n        withAvatar: true,\n        widget: \"WeatherInfo\",\n      }\n    );\n    this.addMessageToBotState(message);\n  };\n\n  //for enrollment no widget , use of form and submission of event\n  EnrollmentNumber = () => {\n    const message = this.createChatBotMessage(\n      `enter your information for generate enrollment no.`,\n      {\n        withAvatar: true,\n        widget: \"EnrollmentNo\",\n      }\n    );\n    this.addMessageToBotState(message);\n  };\n\n  //display list using help of states array\n  WebHandler = () => {\n    const messages = this.createChatBotMessage(`cources for web development:`, {\n      withAvatar: true,\n      widget: \"WebDevelopment\",\n    });\n\n    this.addMessageToBotState(messages);\n  };\n\n  // display list using help of data array provided in widget\n  SoftwareHandler = () => {\n    const messages = this.createChatBotMessage(\n      `cources for software development:`,\n      { withAvatar: true, widget: \"SoftwareDevelopment\" }\n    );\n    this.addMessageToBotState(messages);\n  };\n\n  //default handler if you not found any mathes\n  handleDefault = () => {\n    const message = this.createChatBotMessage(\"How can I help?\", {\n      withAvatar: true,\n      widget: \"Tools\",\n    });\n    this.addMessageToBotState(message);\n  };\n}\n\nexport default ActionProvider;\n","import React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Config from \"./Config\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport \"./app.css\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"container\">\n          <h1>\n            Simple chatbot made by{\" \"}\n            <span style={{ color: \"red\" }}>Nitesh Prajapati</span>\n          </h1>\n        </div>\n        <div className=\"container\">\n          <h4>1. for find your enrollment no. in gtu enter enrollment no.</h4>\n          <h5>fill form and submit your responce </h5>\n        </div>\n        <div className=\"container\">\n          <h4>2. want to know about web development type web development</h4>\n        </div>\n        <div className=\"container\">\n          <h4>\n            3. want to know about software development type software development\n          </h4>\n        </div>\n        <div className=\"container\">\n          <h4>\n            4. want to know about weather of your city and other cities type weather\n          </h4>\n        </div>\n        <div className=\"App mx-auto col-md-6 col-sm-8 col-lg-4 cpl-xl-3 my-5\">\n          <Chatbot\n            config={Config}\n            messageParser={MessageParser}\n            actionProvider={ActionProvider}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}